Task 6 – Create a Strong Password and Evaluate Its Strength
Date Performed: August 18, 2025
Tool Used: passwordmeter.com

This task involved creating multiple passwords with varying levels of complexity, evaluating their strength using an online password checker, and analyzing how different characteristics (length, character variety, structure) influence overall security. Additionally, common password attack techniques were studied in order to better understand why complexity and randomness are essential features of a strong password.

Passwords Evaluated and Results:

1. pass  (3%) – Very Weak
   - Extremely short and composed only of lowercase letters. Easily cracked using both dictionary and brute-force attacks.

2. password  (8%) – Very Weak
   - Although slightly longer, this is one of the most common passwords and is typically included in dictionary lists.

3. Password  (26%) – Weak
   - Uppercase first letter adds minor variation; however, the rest of the string is predictable and still dictionary-based.

4. Password@  (56%) – Good
   - Addition of a special character increases complexity, making brute-force attacks slower. Still predictable from a dictionary perspective.

5. Password34  (66%) – Strong
   - Incorporates numbers alongside letters; significantly increases total possible character combinations and reduces likelihood of dictionary match.

6. Password@34  (84%) – Very Strong
   - Combination of uppercase, lowercase, numbers, and symbols dramatically expands the character space, thus requiring exponentially more brute-force attempts.

7. Password@#34  (100%) – Very Strong
   - Additional symbol increases randomness. Total length of 12 characters plus multiple character types makes this password extremely resistant to both dictionary and brute-force attacks.

Technical Overview of Password Attacks:

Brute-Force Attack:
A brute-force attack systematically tries all possible character combinations until the correct password is found. Simple passwords (short, with limited character sets) take very little time to crack. As soon as length and complexity increase, the time required becomes exponentially longer.

Dictionary Attack:
This method uses a predefined list of commonly used passwords and words found in dictionaries. Any password based on real words (e.g., password, admin, qwerty) can be discovered within seconds.

Rainbow Table Attack:
Instead of computing each hash during the attack, precomputed tables of hash values are referenced. Rainbow tables are especially effective against short, common passwords with known hashing algorithms. Salting and password complexity mitigate this significantly.

Conclusions:
The results clearly demonstrate that password complexity has a direct and significant effect on overall security. In the test, the evolution from “pass” to “Password@#34” increased the score from 3% to 100%. This improvement occurred due to increased length, inclusion of mixed character types, and reduced predictability. Short passwords or real dictionary words are highly vulnerable to basic dictionary and brute-force attacks. Longer passwords with varied character sets make these attack methods impractical due to exponentially growing search spaces.

Recommendations:
- Use 12 or more characters whenever possible
- Combine uppercase letters, lowercase letters, numbers, and symbols
- Avoid using common words, names, or predictable patterns
- Never reuse the same password across multiple accounts
- Consider using a random password generator or password manager
- Update passwords periodically to minimize exposure over time
- Use passphrases made of unrelated words if memorability is an issue

